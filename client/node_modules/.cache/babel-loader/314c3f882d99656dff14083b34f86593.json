{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\John\\\\Desktop\\\\Web Dev\\\\watch-list\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\John\\\\Desktop\\\\Web Dev\\\\watch-list\\\\client\\\\src\\\\components\\\\Register.js\";\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport watchListLogo from \"../img/watchlist-logo.svg\";\nimport AuthError from './AuthError';\nimport '../css/register.scss';\nimport useForm from '../hooks/useForm';\n\nconst Register = () => {\n  // const [registerFields, setRegisterFields] = useState({\n  //   username: '',\n  //   password: '',\n  //   confirmPassword: ''\n  // });\n  // const [registerFieldErrors, setRegisterFieldErrors] = useState({\n  //   username: [],\n  //   password: [],\n  //   confirmPassword: []\n  // });\n  const _useState = useState({\n    username: false,\n    password: false,\n    confirmPassword: false\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        registerFieldHighlight = _useState2[0],\n        setRegisterFieldHighlight = _useState2[1]; // const checkInputValues = (fieldName, fieldValue) => {\n  //   switch (fieldName) {\n  //     case 'username': {\n  //       const formErrors = [];\n  //       if (fieldValue.includes(' ')) {\n  //         formErrors.push('Username cannot contain any spaces');\n  //       }\n  //       if (fieldValue.length < 1) {\n  //         formErrors.push('Username is required');\n  //       }\n  //       setRegisterFieldErrors({\n  //         ...registerFieldErrors,\n  //         username: formErrors\n  //       });\n  //       if (registerFieldErrors.username.length > 0) {\n  //         setRegisterFieldHighlight({\n  //           ...registerFieldHighlight,\n  //           username: true\n  //         });\n  //       } else {\n  //         setRegisterFieldHighlight({\n  //           ...registerFieldHighlight,\n  //           username: false\n  //         });\n  //       }\n  //       break;\n  //     }\n  //     case 'password': {\n  //       const formErrors = [];\n  //       if (fieldValue.includes(' ')) {\n  //         formErrors.push('Password cannot contain any spaces');\n  //       }\n  //       if (fieldValue.length < 1) {\n  //         formErrors.push('Password is required');\n  //       }\n  //       if (fieldValue.length < 6) {\n  //         formErrors.push('Password needs to have a minimum of 6 characters');\n  //       }\n  //       if (\n  //         fieldValue !== registerFields.confirmPassword &&\n  //         registerFields.confirmPassword.length > 1\n  //       ) {\n  //         setRegisterFieldErrors({\n  //           ...registerFieldErrors,\n  //           password: formErrors,\n  //           confirmPassword: ['Passwords do not match']\n  //         });\n  //       } else\n  //         setRegisterFieldErrors({\n  //           ...registerFieldErrors,\n  //           password: formErrors,\n  //           confirmPassword: []\n  //         });\n  //       if (formErrors.length > 0) {\n  //         setRegisterFieldHighlight({\n  //           ...registerFieldHighlight,\n  //           password: true\n  //         });\n  //       } else {\n  //         setRegisterFieldHighlight({\n  //           ...registerFieldHighlight,\n  //           password: false,\n  //           confirmPassword:false\n  //         });\n  //       }\n  //       break;\n  //     }\n  //     case 'confirmPassword': {\n  //       const formErrors = [];\n  //       if (fieldValue !== registerFields.password) {\n  //         formErrors.push('Passwords do not match');\n  //       }\n  //       setRegisterFieldErrors({\n  //         ...registerFieldErrors,\n  //         confirmPassword: formErrors\n  //       });\n  //       if (formErrors.length > 0) {\n  //         setRegisterFieldHighlight({\n  //           ...registerFieldHighlight,\n  //           confirmPassword: true\n  //         });\n  //       } else {\n  //         setRegisterFieldHighlight({\n  //           ...registerFieldHighlight,\n  //           confirmPassword: false\n  //         });\n  //       }\n  //       break;\n  //     }\n  //   }\n  // };\n\n\n  const handleFormFields = event => {// const fieldName = event.target.name;\n    // const fieldValue = event.target.value;\n    // switch (fieldName) {\n    //   case 'username':\n    //     setRegisterFields({ ...registerFields, username: fieldValue });\n    //     checkInputValues(fieldName, fieldValue);\n    //     break;\n    //   case 'password':\n    //     setRegisterFields({ ...registerFields, password: fieldValue });\n    //     checkInputValues(fieldName, fieldValue);\n    //     break;\n    //   case 'confirmPassword':\n    //     setRegisterFields({ ...registerFields, confirmPassword: fieldValue });\n    //     checkInputValues(fieldName, fieldValue);\n    //     break;\n    // }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"register-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"register-header__logo\",\n    src: watchListLogo,\n    alt: \"Smiling TV\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    className: \"register-header__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, \"Watch List\")), React.createElement(\"form\", {\n    className: \"register-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"register-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"label-text\",\n    style: registerFieldHighlight.username ? {\n      color: 'red'\n    } : {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \"Username\"), React.createElement(\"input\", {\n    className: \"register-form__username\",\n    type: \"text\",\n    name: \"username\",\n    value: formFields.username,\n    onChange: updateFormFields,\n    autoComplete: \"off\",\n    autoCorrect: \"off\",\n    autoCapitalize: \"off\",\n    spellCheck: \"false\",\n    style: registerFieldHighlight.username ? {\n      border: '2px solid red'\n    } : {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }), React.createElement(AuthError, {\n    fieldErrors: formErrors.username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    className: \"register-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"label-text\",\n    style: registerFieldHighlight.password ? {\n      color: 'red'\n    } : {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    className: \"register-form__password\",\n    type: \"password\",\n    name: \"password\",\n    value: formFields.password,\n    onChange: updateFormFields,\n    style: registerFieldHighlight.password ? {\n      border: '2px solid red'\n    } : {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    className: \"register-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"label-text\",\n    style: registerFieldHighlight.confirmPassword ? {\n      color: 'red'\n    } : {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, \"Confirm Password\"), React.createElement(\"input\", {\n    className: \"register-form__confirm-password\",\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: formFields.confirmPassword,\n    onChange: updateFormFields,\n    style: registerFieldHighlight.confirmPassword ? {\n      border: '2px solid red'\n    } : {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"register-password-errors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, React.createElement(AuthError, {\n    fieldErrors: formErrors.password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }), React.createElement(AuthError, {\n    fieldErrors: formErrors.confirmPassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }))), React.createElement(\"input\", {\n    className: \"register-form__submit\",\n    type: \"submit\",\n    value: \"Register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"register-links\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"register-signin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"register-signin__message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, \"Already Have An Account?\"), React.createElement(Link, {\n    to: \"/login\",\n    className: \"register-signin__link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, \"Sign In\")), React.createElement(Link, {\n    to: \"/\",\n    className: \"register-links__guest\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }, \"Guest\")));\n};\n\nexport default Register;","map":{"version":3,"sources":["C:\\Users\\John\\Desktop\\Web Dev\\watch-list\\client\\src\\components\\Register.js"],"names":["React","useState","Link","AuthError","useForm","Register","username","password","confirmPassword","registerFieldHighlight","setRegisterFieldHighlight","handleFormFields","event","watchListLogo","color","formFields","updateFormFields","border","formErrors"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,sBAAP;AACA,OAAOC,OAAP,MAAoB,kBAApB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAXqB,oBAauCJ,QAAQ,CAAC;AACnEK,IAAAA,QAAQ,EAAE,KADyD;AAEnEC,IAAAA,QAAQ,EAAE,KAFyD;AAGnEC,IAAAA,eAAe,EAAE;AAHkD,GAAD,CAb/C;AAAA;AAAA,QAadC,sBAbc;AAAA,QAaUC,yBAbV,kBAqBrB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEA,QAAMC,gBAAgB,GAAGC,KAAK,IAAI,CAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAjBD;;AAqBA,SACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,uBADZ;AAEE,IAAA,GAAG,EAAEC,aAFP;AAGE,IAAA,GAAG,EAAC,YAHN;AAAA;AAAA;AAAA;AAAA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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport watchListLogo from '../img/watchlist-logo.svg';\r\nimport AuthError from './AuthError';\r\nimport '../css/register.scss';\r\nimport useForm from '../hooks/useForm';\r\n\r\nconst Register = () => {\r\n  // const [registerFields, setRegisterFields] = useState({\r\n  //   username: '',\r\n  //   password: '',\r\n  //   confirmPassword: ''\r\n  // });\r\n\r\n  // const [registerFieldErrors, setRegisterFieldErrors] = useState({\r\n  //   username: [],\r\n  //   password: [],\r\n  //   confirmPassword: []\r\n  // });\r\n\r\n  const [registerFieldHighlight, setRegisterFieldHighlight] = useState({\r\n    username: false,\r\n    password: false,\r\n    confirmPassword: false\r\n  });\r\n\r\n\r\n\r\n  // const checkInputValues = (fieldName, fieldValue) => {\r\n  //   switch (fieldName) {\r\n  //     case 'username': {\r\n  //       const formErrors = [];\r\n  //       if (fieldValue.includes(' ')) {\r\n  //         formErrors.push('Username cannot contain any spaces');\r\n  //       }\r\n\r\n  //       if (fieldValue.length < 1) {\r\n  //         formErrors.push('Username is required');\r\n  //       }\r\n  //       setRegisterFieldErrors({\r\n  //         ...registerFieldErrors,\r\n  //         username: formErrors\r\n  //       });\r\n  //       if (registerFieldErrors.username.length > 0) {\r\n  //         setRegisterFieldHighlight({\r\n  //           ...registerFieldHighlight,\r\n  //           username: true\r\n  //         });\r\n  //       } else {\r\n  //         setRegisterFieldHighlight({\r\n  //           ...registerFieldHighlight,\r\n  //           username: false\r\n  //         });\r\n  //       }\r\n\r\n  //       break;\r\n  //     }\r\n\r\n  //     case 'password': {\r\n  //       const formErrors = [];\r\n\r\n  //       if (fieldValue.includes(' ')) {\r\n  //         formErrors.push('Password cannot contain any spaces');\r\n  //       }\r\n\r\n  //       if (fieldValue.length < 1) {\r\n  //         formErrors.push('Password is required');\r\n  //       }\r\n\r\n  //       if (fieldValue.length < 6) {\r\n  //         formErrors.push('Password needs to have a minimum of 6 characters');\r\n  //       }\r\n\r\n  //       if (\r\n  //         fieldValue !== registerFields.confirmPassword &&\r\n  //         registerFields.confirmPassword.length > 1\r\n  //       ) {\r\n  //         setRegisterFieldErrors({\r\n  //           ...registerFieldErrors,\r\n  //           password: formErrors,\r\n  //           confirmPassword: ['Passwords do not match']\r\n  //         });\r\n  //       } else\r\n  //         setRegisterFieldErrors({\r\n  //           ...registerFieldErrors,\r\n  //           password: formErrors,\r\n  //           confirmPassword: []\r\n  //         });\r\n\r\n  //       if (formErrors.length > 0) {\r\n  //         setRegisterFieldHighlight({\r\n  //           ...registerFieldHighlight,\r\n  //           password: true\r\n  //         });\r\n  //       } else {\r\n  //         setRegisterFieldHighlight({\r\n  //           ...registerFieldHighlight,\r\n  //           password: false,\r\n  //           confirmPassword:false\r\n  //         });\r\n  //       }\r\n\r\n  //       break;\r\n  //     }\r\n\r\n  //     case 'confirmPassword': {\r\n  //       const formErrors = [];\r\n\r\n  //       if (fieldValue !== registerFields.password) {\r\n  //         formErrors.push('Passwords do not match');\r\n  //       }\r\n  //       setRegisterFieldErrors({\r\n  //         ...registerFieldErrors,\r\n  //         confirmPassword: formErrors\r\n  //       });\r\n\r\n  //       if (formErrors.length > 0) {\r\n  //         setRegisterFieldHighlight({\r\n  //           ...registerFieldHighlight,\r\n  //           confirmPassword: true\r\n  //         });\r\n  //       } else {\r\n  //         setRegisterFieldHighlight({\r\n  //           ...registerFieldHighlight,\r\n  //           confirmPassword: false\r\n  //         });\r\n  //       }\r\n\r\n  //       break;\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  const handleFormFields = event => {\r\n    // const fieldName = event.target.name;\r\n    // const fieldValue = event.target.value;\r\n    // switch (fieldName) {\r\n    //   case 'username':\r\n    //     setRegisterFields({ ...registerFields, username: fieldValue });\r\n    //     checkInputValues(fieldName, fieldValue);\r\n    //     break;\r\n    //   case 'password':\r\n    //     setRegisterFields({ ...registerFields, password: fieldValue });\r\n    //     checkInputValues(fieldName, fieldValue);\r\n    //     break;\r\n    //   case 'confirmPassword':\r\n    //     setRegisterFields({ ...registerFields, confirmPassword: fieldValue });\r\n    //     checkInputValues(fieldName, fieldValue);\r\n    //     break;\r\n    // }\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <div className=\"register\">\r\n      <div className=\"register-header\">\r\n        <img\r\n          className=\"register-header__logo\"\r\n          src={watchListLogo}\r\n          alt=\"Smiling TV\"\r\n        />\r\n        <h1 className=\"register-header__title\">Watch List</h1>\r\n      </div>\r\n\r\n      <form className=\"register-form\">\r\n        <label className=\"register-form-label\">\r\n          <span\r\n            className=\"label-text\"\r\n            style={registerFieldHighlight.username ? { color: 'red' } : {}}\r\n          >\r\n            Username\r\n          </span>\r\n          <input\r\n            className=\"register-form__username\"\r\n            type=\"text\"\r\n            name=\"username\"\r\n            value={formFields.username}\r\n            onChange={updateFormFields}\r\n            autoComplete=\"off\"\r\n            autoCorrect=\"off\"\r\n            autoCapitalize=\"off\"\r\n            spellCheck=\"false\"\r\n            style={\r\n              registerFieldHighlight.username ? { border: '2px solid red' } : {}\r\n            }\r\n          />\r\n          <AuthError fieldErrors={formErrors.username} />\r\n        </label>\r\n        <label className=\"register-form-label\">\r\n          <span\r\n            className=\"label-text\"\r\n            style={registerFieldHighlight.password ? { color: 'red' } : {}}\r\n          >\r\n            Password\r\n          </span>\r\n          <input\r\n            className=\"register-form__password\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={formFields.password}\r\n            onChange={updateFormFields}\r\n            style={\r\n              registerFieldHighlight.password ? { border: '2px solid red' } : {}\r\n            }\r\n          />\r\n        </label>\r\n        <label className=\"register-form-label\">\r\n          <span\r\n            className=\"label-text\"\r\n            style={\r\n              registerFieldHighlight.confirmPassword ? { color: 'red' } : {}\r\n            }\r\n          >\r\n            Confirm Password\r\n          </span>\r\n          <input\r\n            className=\"register-form__confirm-password\"\r\n            type=\"password\"\r\n            name=\"confirmPassword\"\r\n            value={formFields.confirmPassword}\r\n            onChange={updateFormFields}\r\n            style={\r\n              registerFieldHighlight.confirmPassword\r\n                ? { border: '2px solid red' }\r\n                : {}\r\n            }\r\n          />\r\n          <div className=\"register-password-errors\">\r\n            <AuthError fieldErrors={formErrors.password} />\r\n            <AuthError fieldErrors={formErrors.confirmPassword} />\r\n          </div>\r\n        </label>\r\n        <input\r\n          className=\"register-form__submit\"\r\n          type=\"submit\"\r\n          value=\"Register\"\r\n        />\r\n      </form>\r\n\r\n      <div className=\"register-links\">\r\n        <div className=\"register-signin\">\r\n          <p className=\"register-signin__message\">Already Have An Account?</p>\r\n          <Link to=\"/login\" className=\"register-signin__link\">\r\n            Sign In\r\n          </Link>\r\n        </div>\r\n        <Link to=\"/\" className=\"register-links__guest\">\r\n          Guest\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}