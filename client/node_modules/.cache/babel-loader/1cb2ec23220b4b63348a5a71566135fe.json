{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\John\\\\Desktop\\\\Web Dev\\\\watch-list\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nexport default ((fieldName, fieldValue) => {\n  switch (fieldName) {\n    case 'username':\n      {\n        const errors = [];\n\n        if (fieldValue.includes(' ')) {\n          errors.push('Username cannot contain spaces');\n        }\n\n        if (fieldValue.length < 1) {\n          errors.push('Username is required');\n        }\n\n        setFormFields(_objectSpread({}, formFields, {\n          [fieldName]: {\n            value: fieldValue,\n            errors\n          }\n        }));\n        break;\n      }\n\n    case 'password':\n      {\n        const errors = [];\n        const passwordField = fieldValue;\n        const confirmPasswordField = formFields.confirmPassword.value;\n\n        if (fieldValue.includes(' ')) {\n          errors.push('Password cannot contain spaces');\n        }\n\n        if (fieldValue.length < 6) {\n          errors.push('Password must contain at least 6 characters');\n        }\n\n        if (passwordField !== confirmPasswordField && confirmPasswordField !== '') {\n          setFormFields(_objectSpread({}, formFields, {\n            [fieldName]: {\n              value: fieldValue,\n              errors\n            },\n            confirmPassword: _objectSpread({}, formFields.confirmPassword, {\n              errors: ['Passwords do not match']\n            })\n          }));\n          break;\n        } else {\n          setFormFields(_objectSpread({}, formFields, {\n            [fieldName]: {\n              value: fieldValue,\n              errors\n            },\n            confirmPassword: _objectSpread({}, formFields.confirmPassword, {\n              errors: []\n            })\n          }));\n          break;\n        }\n      }\n\n    case 'confirmPassword':\n      {\n        const passwordField = formFields.password.value;\n        const confirmPasswordField = fieldValue;\n\n        if (passwordField !== confirmPasswordField) {\n          setFormFields(_objectSpread({}, formFields, {\n            [fieldName]: {\n              value: fieldValue,\n              errors: ['Passwords do not match']\n            }\n          }));\n        } else {\n          setFormFields(_objectSpread({}, formFields, {\n            [fieldName]: {\n              value: fieldValue,\n              errors: []\n            }\n          }));\n        }\n      }\n  }\n});","map":{"version":3,"sources":["C:\\Users\\John\\Desktop\\Web Dev\\watch-list\\client\\src\\components\\context\\auth\\validator.js"],"names":["fieldName","fieldValue","errors","includes","push","length","setFormFields","formFields","value","passwordField","confirmPasswordField","confirmPassword","password"],"mappings":";AAAA,gBAAe,CAACA,SAAD,EAAYC,UAAZ,KAA2B;AAEtC,UAAQD,SAAR;AACI,SAAK,UAAL;AAAiB;AACb,cAAME,MAAM,GAAG,EAAf;;AACA,YAAID,UAAU,CAACE,QAAX,CAAoB,GAApB,CAAJ,EAA8B;AAC1BD,UAAAA,MAAM,CAACE,IAAP,CAAY,gCAAZ;AACH;;AAED,YAAIH,UAAU,CAACI,MAAX,GAAoB,CAAxB,EAA2B;AACvBH,UAAAA,MAAM,CAACE,IAAP,CAAY,sBAAZ;AACH;;AAEDE,QAAAA,aAAa,mBACNC,UADM;AAET,WAACP,SAAD,GAAa;AAAEQ,YAAAA,KAAK,EAAEP,UAAT;AAAqBC,YAAAA;AAArB;AAFJ,WAAb;AAIA;AACH;;AAED,SAAK,UAAL;AAAiB;AACb,cAAMA,MAAM,GAAG,EAAf;AACA,cAAMO,aAAa,GAAGR,UAAtB;AACA,cAAMS,oBAAoB,GAAGH,UAAU,CAACI,eAAX,CAA2BH,KAAxD;;AACA,YAAIP,UAAU,CAACE,QAAX,CAAoB,GAApB,CAAJ,EAA8B;AAC1BD,UAAAA,MAAM,CAACE,IAAP,CAAY,gCAAZ;AACH;;AAED,YAAIH,UAAU,CAACI,MAAX,GAAoB,CAAxB,EAA2B;AACvBH,UAAAA,MAAM,CAACE,IAAP,CAAY,6CAAZ;AACH;;AAED,YACIK,aAAa,KAAKC,oBAAlB,IACAA,oBAAoB,KAAK,EAF7B,EAGE;AACEJ,UAAAA,aAAa,mBACNC,UADM;AAET,aAACP,SAAD,GAAa;AAAEQ,cAAAA,KAAK,EAAEP,UAAT;AAAqBC,cAAAA;AAArB,aAFJ;AAGTS,YAAAA,eAAe,oBACRJ,UAAU,CAACI,eADH;AAEXT,cAAAA,MAAM,EAAE,CAAC,wBAAD;AAFG;AAHN,aAAb;AAQA;AACH,SAbD,MAaO;AACHI,UAAAA,aAAa,mBACNC,UADM;AAET,aAACP,SAAD,GAAa;AAAEQ,cAAAA,KAAK,EAAEP,UAAT;AAAqBC,cAAAA;AAArB,aAFJ;AAGTS,YAAAA,eAAe,oBACRJ,UAAU,CAACI,eADH;AAEXT,cAAAA,MAAM,EAAE;AAFG;AAHN,aAAb;AAQA;AACH;AACJ;;AAED,SAAK,iBAAL;AAAwB;AACpB,cAAMO,aAAa,GAAGF,UAAU,CAACK,QAAX,CAAoBJ,KAA1C;AACA,cAAME,oBAAoB,GAAGT,UAA7B;;AACA,YAAIQ,aAAa,KAAKC,oBAAtB,EAA4C;AACxCJ,UAAAA,aAAa,mBACNC,UADM;AAET,aAACP,SAAD,GAAa;AACTQ,cAAAA,KAAK,EAAEP,UADE;AAETC,cAAAA,MAAM,EAAE,CAAC,wBAAD;AAFC;AAFJ,aAAb;AAOH,SARD,MAQO;AACHI,UAAAA,aAAa,mBACNC,UADM;AAET,aAACP,SAAD,GAAa;AAAEQ,cAAAA,KAAK,EAAEP,UAAT;AAAqBC,cAAAA,MAAM,EAAE;AAA7B;AAFJ,aAAb;AAIH;AACJ;AAzEL;AA2EH,CA7ED","sourcesContent":["export default (fieldName, fieldValue) => {\r\n    \r\n    switch (fieldName) {\r\n        case 'username': {\r\n            const errors = [];\r\n            if (fieldValue.includes(' ')) {\r\n                errors.push('Username cannot contain spaces');\r\n            }\r\n\r\n            if (fieldValue.length < 1) {\r\n                errors.push('Username is required');\r\n            }\r\n\r\n            setFormFields({\r\n                ...formFields,\r\n                [fieldName]: { value: fieldValue, errors }\r\n            });\r\n            break;\r\n        }\r\n\r\n        case 'password': {\r\n            const errors = [];\r\n            const passwordField = fieldValue;\r\n            const confirmPasswordField = formFields.confirmPassword.value;\r\n            if (fieldValue.includes(' ')) {\r\n                errors.push('Password cannot contain spaces');\r\n            }\r\n\r\n            if (fieldValue.length < 6) {\r\n                errors.push('Password must contain at least 6 characters');\r\n            }\r\n\r\n            if (\r\n                passwordField !== confirmPasswordField &&\r\n                confirmPasswordField !== ''\r\n            ) {\r\n                setFormFields({\r\n                    ...formFields,\r\n                    [fieldName]: { value: fieldValue, errors },\r\n                    confirmPassword: {\r\n                        ...formFields.confirmPassword,\r\n                        errors: ['Passwords do not match']\r\n                    }\r\n                });\r\n                break;\r\n            } else {\r\n                setFormFields({\r\n                    ...formFields,\r\n                    [fieldName]: { value: fieldValue, errors },\r\n                    confirmPassword: {\r\n                        ...formFields.confirmPassword,\r\n                        errors: []\r\n                    }\r\n                });\r\n                break;\r\n            }\r\n        }\r\n\r\n        case 'confirmPassword': {\r\n            const passwordField = formFields.password.value;\r\n            const confirmPasswordField = fieldValue;\r\n            if (passwordField !== confirmPasswordField) {\r\n                setFormFields({\r\n                    ...formFields,\r\n                    [fieldName]: {\r\n                        value: fieldValue,\r\n                        errors: ['Passwords do not match']\r\n                    }\r\n                });\r\n            } else {\r\n                setFormFields({\r\n                    ...formFields,\r\n                    [fieldName]: { value: fieldValue, errors: [] }\r\n                });\r\n            }\r\n        }\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}