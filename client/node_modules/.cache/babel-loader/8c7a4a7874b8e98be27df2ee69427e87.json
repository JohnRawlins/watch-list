{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\John\\\\Desktop\\\\Web Dev\\\\watch-list\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\John\\\\Desktop\\\\Web Dev\\\\watch-list\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { useState } from 'react';\n\nconst useForm = () => {\n  const _useState = useState({\n    username: '',\n    password: '',\n    confirmPassword: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        inputFields = _useState2[0],\n        setInputFields = _useState2[1];\n\n  const _useState3 = useState({\n    username: [],\n    password: [],\n    confirmPassword: []\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        inputErrors = _useState4[0],\n        setInputErrors = _useState4[1];\n\n  const checkForInputErrors = (fieldName, fieldValue) => {};\n\n  const updateInputFields = field => {\n    const fieldName = field.target.name;\n    const fieldValue = field.target.value;\n    checkForInputErrors(fieldName, fieldValue);\n    setInputFields(_objectSpread({}, inputFields, {\n      [fieldName]: fieldValue\n    }));\n  };\n\n  return {\n    updateInputFields,\n    inputFields,\n    inputErrors\n  };\n};\n\nexport default useForm;","map":{"version":3,"sources":["C:\\Users\\John\\Desktop\\Web Dev\\watch-list\\client\\src\\hooks\\useForm.js"],"names":["useState","useForm","username","password","confirmPassword","inputFields","setInputFields","inputErrors","setInputErrors","checkForInputErrors","fieldName","fieldValue","updateInputFields","field","target","name","value"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA,oBACkBD,QAAQ,CAAC;AAC7CE,IAAAA,QAAQ,EAAE,EADmC;AAE7CC,IAAAA,QAAQ,EAAE,EAFmC;AAG7CC,IAAAA,eAAe,EAAE;AAH4B,GAAD,CAD1B;AAAA;AAAA,QACbC,WADa;AAAA,QACAC,cADA;;AAAA,qBAOkBN,QAAQ,CAAC;AAC3CE,IAAAA,QAAQ,EAAC,EADkC;AAE3CC,IAAAA,QAAQ,EAAC,EAFkC;AAG3CC,IAAAA,eAAe,EAAC;AAH2B,GAAD,CAP1B;AAAA;AAAA,QAObG,WAPa;AAAA,QAOAC,cAPA;;AAapB,QAAMC,mBAAmB,GAAG,CAACC,SAAD,EAAYC,UAAZ,KAA2B,CAEtD,CAFD;;AAIA,QAAMC,iBAAiB,GAAGC,KAAK,IAAI;AACjC,UAAMH,SAAS,GAAGG,KAAK,CAACC,MAAN,CAAaC,IAA/B;AACA,UAAMJ,UAAU,GAAGE,KAAK,CAACC,MAAN,CAAaE,KAAhC;AAEAP,IAAAA,mBAAmB,CAAEC,SAAF,EAAYC,UAAZ,CAAnB;AAEAL,IAAAA,cAAc,mBAAMD,WAAN;AAAmB,OAACK,SAAD,GAAaC;AAAhC,OAAd;AACD,GAPD;;AASA,SAAO;AAAEC,IAAAA,iBAAF;AAAqBP,IAAAA,WAArB;AAAkCE,IAAAA;AAAlC,GAAP;AACD,CA3BD;;AA6BA,eAAeN,OAAf","sourcesContent":["import { useState } from 'react';\r\n\r\nconst useForm = () => {\r\n  const [inputFields, setInputFields] = useState({\r\n    username: '',\r\n    password: '',\r\n    confirmPassword: ''\r\n  });\r\n\r\n  const [inputErrors, setInputErrors] = useState({\r\n      username:[],\r\n      password:[],\r\n      confirmPassword:[]\r\n  })\r\n\r\n  const checkForInputErrors = (fieldName, fieldValue) => {\r\n\r\n  }\r\n\r\n  const updateInputFields = field => {\r\n    const fieldName = field.target.name;\r\n    const fieldValue = field.target.value;\r\n\r\n    checkForInputErrors (fieldName,fieldValue);\r\n\r\n    setInputFields({ ...inputFields, [fieldName]: fieldValue });\r\n  };\r\n\r\n  return { updateInputFields, inputFields, inputErrors };\r\n};\r\n\r\nexport default useForm;\r\n"]},"metadata":{},"sourceType":"module"}