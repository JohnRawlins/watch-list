{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\John\\\\Desktop\\\\Web Dev\\\\watch-list\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\John\\\\Desktop\\\\Web Dev\\\\watch-list\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\John\\\\Desktop\\\\Web Dev\\\\watch-list\\\\client\\\\src\\\\components\\\\Register.js\";\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport watchListLogo from \"../img/watchlist-logo.svg\";\nimport AuthError from './AuthError';\nimport '../css/register.scss';\n\nconst Register = () => {\n  const _useState = useState({\n    username: '',\n    password: '',\n    confirmPassword: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        registerFields = _useState2[0],\n        setRegisterFields = _useState2[1];\n\n  const _useState3 = useState({\n    username: {\n      errors: []\n    },\n    password: {\n      errors: []\n    },\n    confirmPassword: {\n      errors: []\n    }\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        registerErrors = _useState4[0],\n        setRegisterErrors = _useState4[1];\n\n  const checkForInputErrors = () => {\n    if (registerFields.username.length < 1) {\n      setRegisterErrors(_objectSpread({}, registerErrors, {\n        username: {\n          errors: [...registerErrors.username.errors, 'Test']\n        }\n      }));\n    }\n  };\n\n  const handleInputChange = event => {\n    const fieldName = event.target.name;\n    const fieldValue = event.target.value;\n\n    switch (fieldName) {\n      case 'username':\n        setRegisterFields(_objectSpread({}, registerFields, {\n          username: fieldValue\n        }));\n        break;\n\n      case 'password':\n        setRegisterFields(_objectSpread({}, registerFields, {\n          password: fieldValue\n        }));\n        break;\n\n      case 'confirmPassword':\n        setRegisterFields(_objectSpread({}, registerFields, {\n          confirmPassword: fieldValue\n        }));\n        break;\n    }\n\n    checkForInputErrors();\n  };\n\n  return React.createElement(\"div\", {\n    className: \"register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"register-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"register-header__logo\",\n    src: watchListLogo,\n    alt: \"Smiling TV\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    className: \"register-header__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Watch List\")), React.createElement(\"form\", {\n    className: \"register-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(AuthError, {\n    reerrors: registerErrors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    className: \"register-form__username\",\n    type: \"text\",\n    placeholder: \"Username\",\n    name: \"username\",\n    value: registerFields.username,\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    className: \"register-form__password\",\n    type: \"password\",\n    placeholder: \"Password\",\n    name: \"password\",\n    value: registerFields.password,\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    className: \"register-form__confirm-password\",\n    type: \"password\",\n    placeholder: \"Confirm Password\",\n    name: \"confirmPassword\",\n    value: registerFields.confirmPassword,\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    className: \"register-form__submit\",\n    type: \"submit\",\n    value: \"Register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"register-links\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"register-signin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"register-signin__message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Already Have An Account?\"), React.createElement(Link, {\n    to: \"/login\",\n    className: \"register-signin__link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Sign In\")), React.createElement(Link, {\n    to: \"/\",\n    className: \"register-links__guest\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Guest\")));\n};\n\nexport default Register;","map":{"version":3,"sources":["C:\\Users\\John\\Desktop\\Web Dev\\watch-list\\client\\src\\components\\Register.js"],"names":["React","useState","Link","AuthError","Register","username","password","confirmPassword","registerFields","setRegisterFields","errors","registerErrors","setRegisterErrors","checkForInputErrors","length","handleInputChange","event","fieldName","target","name","fieldValue","value","watchListLogo"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport watchListLogo from '../img/watchlist-logo.svg';\r\nimport AuthError from './AuthError';\r\nimport '../css/register.scss';\r\n\r\nconst Register = () => {\r\n  const [registerFields, setRegisterFields] = useState({\r\n    username: '',\r\n    password: '',\r\n    confirmPassword: ''\r\n  });\r\n\r\n  const [registerErrors, setRegisterErrors] = useState({\r\n    username: { errors: [] },\r\n    password: { errors: [] },\r\n    confirmPassword: { errors: [] }\r\n  });\r\n\r\n  const checkForInputErrors = () => {\r\n    if (registerFields.username.length < 1) {\r\n      setRegisterErrors({\r\n        ...registerErrors,\r\n        username: {\r\n          errors: [...registerErrors.username.errors, 'Test']\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleInputChange = event => {\r\n    const fieldName = event.target.name;\r\n    const fieldValue = event.target.value;\r\n    switch (fieldName) {\r\n      case 'username':\r\n        setRegisterFields({ ...registerFields, username: fieldValue });\r\n        break;\r\n\r\n      case 'password':\r\n        setRegisterFields({ ...registerFields, password: fieldValue });\r\n        break;\r\n\r\n      case 'confirmPassword':\r\n        setRegisterFields({ ...registerFields, confirmPassword: fieldValue });\r\n        break;\r\n    }\r\n\r\n    checkForInputErrors();\r\n  };\r\n\r\n  return (\r\n    <div className=\"register\">\r\n      <div className=\"register-header\">\r\n        <img\r\n          className=\"register-header__logo\"\r\n          src={watchListLogo}\r\n          alt=\"Smiling TV\"\r\n        />\r\n        <h1 className=\"register-header__title\">Watch List</h1>\r\n      </div>\r\n\r\n      <form className=\"register-form\">\r\n        <AuthError reerrors={registerErrors} />\r\n        <input\r\n          className=\"register-form__username\"\r\n          type=\"text\"\r\n          placeholder=\"Username\"\r\n          name=\"username\"\r\n          value={registerFields.username}\r\n          onChange={handleInputChange}\r\n        />\r\n        <input\r\n          className=\"register-form__password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          name=\"password\"\r\n          value={registerFields.password}\r\n          onChange={handleInputChange}\r\n        />\r\n\r\n        <input\r\n          className=\"register-form__confirm-password\"\r\n          type=\"password\"\r\n          placeholder=\"Confirm Password\"\r\n          name=\"confirmPassword\"\r\n          value={registerFields.confirmPassword}\r\n          onChange={handleInputChange}\r\n        />\r\n        <input\r\n          className=\"register-form__submit\"\r\n          type=\"submit\"\r\n          value=\"Register\"\r\n        />\r\n      </form>\r\n\r\n      <div className=\"register-links\">\r\n        <div className=\"register-signin\">\r\n          <p className=\"register-signin__message\">Already Have An Account?</p>\r\n          <Link to=\"/login\" className=\"register-signin__link\">\r\n            Sign In\r\n          </Link>\r\n        </div>\r\n        <Link to=\"/\" className=\"register-links__guest\">\r\n          Guest\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}