{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\John\\\\Desktop\\\\Web Dev\\\\watch-list\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\John\\\\Desktop\\\\Web Dev\\\\watch-list\\\\client\\\\src\\\\components\\\\context\\\\auth\\\\AuthState.js\";\nimport React, { useReducer } from 'react';\nimport AuthContext from './authContext';\nimport authReducer from './authReducer';\n\nconst AuthState = props => {\n  const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\n  const REGISTER_FAIL = 'REGISTER_FAIL';\n  const USER_LOADED = 'USER_LOADED';\n  const AUTH_ERROR = 'AUTH_ERROR';\n  const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\n  const LOGIN_FAIL = 'LOGIN_FAIL';\n  const LOGOUT = 'LOGOUT';\n  const CLEAR_ERRORS = 'CLEAR_ERRORS';\n  const initialState = {\n    user: null,\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    error: null\n  };\n\n  const _useReducer = useReducer(authReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  return React.createElement(AuthContext.provider, {\n    value: {\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      loading: state.loading,\n      user: state.user,\n      error: state.error\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["C:\\Users\\John\\Desktop\\Web Dev\\watch-list\\client\\src\\components\\context\\auth\\AuthState.js"],"names":["React","useReducer","AuthContext","authReducer","AuthState","props","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","initialState","user","token","localStorage","getItem","isAuthenticated","loading","error","state","dispatch","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACzB,QAAMC,gBAAgB,GAAG,kBAAzB;AACA,QAAMC,aAAa,GAAG,eAAtB;AACA,QAAMC,WAAW,GAAG,aAApB;AACA,QAAMC,UAAU,GAAG,YAAnB;AACA,QAAMC,aAAa,GAAG,eAAtB;AACA,QAAMC,UAAU,GAAG,YAAnB;AACA,QAAMC,MAAM,GAAG,QAAf;AACA,QAAMC,YAAY,GAAG,cAArB;AACA,QAAMC,YAAY,GAAG;AACjBC,IAAAA,IAAI,EAAE,IADW;AAEjBC,IAAAA,KAAK,EAACC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAFW;AAGjBC,IAAAA,eAAe,EAAC,IAHC;AAIjBC,IAAAA,OAAO,EAAC,IAJS;AAKjBC,IAAAA,KAAK,EAAC;AALW,GAArB;;AATyB,sBAiBCpB,UAAU,CAACE,WAAD,EAAcW,YAAd,CAjBX;AAAA;AAAA,QAiBlBQ,KAjBkB;AAAA,QAiBXC,QAjBW;;AAuBzB,SACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AACzBP,MAAAA,KAAK,EAACM,KAAK,CAACN,KADa;AAEzBG,MAAAA,eAAe,EAAEG,KAAK,CAACH,eAFE;AAGzBC,MAAAA,OAAO,EAACE,KAAK,CAACF,OAHW;AAIzBL,MAAAA,IAAI,EAACO,KAAK,CAACP,IAJc;AAKzBM,MAAAA,KAAK,EAACC,KAAK,CAACD;AALa,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMIhB,KAAK,CAACmB,QANV,CADF;AASD,CAhCD;;AAkCA,eAAepB,SAAf","sourcesContent":["import React, { useReducer } from 'react';\r\nimport AuthContext from './authContext';\r\nimport authReducer from './authReducer';\r\n\r\nconst AuthState = props => {\r\n  const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\n  const REGISTER_FAIL = 'REGISTER_FAIL';\r\n  const USER_LOADED = 'USER_LOADED';\r\n  const AUTH_ERROR = 'AUTH_ERROR';\r\n  const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\n  const LOGIN_FAIL = 'LOGIN_FAIL';\r\n  const LOGOUT = 'LOGOUT';\r\n  const CLEAR_ERRORS = 'CLEAR_ERRORS';\r\n  const initialState = {\r\n      user: null,\r\n      token:localStorage.getItem('token'),\r\n      isAuthenticated:null,\r\n      loading:true,\r\n      error:null,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <AuthContext.provider value={{\r\n        token:state.token,\r\n        isAuthenticated: state.isAuthenticated,\r\n        loading:state.loading,\r\n        user:state.user,\r\n        error:state.error\r\n    }}>{props.children}</AuthContext.provider>\r\n  );\r\n};\r\n\r\nexport default AuthState;\r\n"]},"metadata":{},"sourceType":"module"}