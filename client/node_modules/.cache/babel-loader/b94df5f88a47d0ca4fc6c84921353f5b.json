{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\John\\\\Desktop\\\\Web Dev\\\\watch-list\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\John\\\\Desktop\\\\Web Dev\\\\watch-list\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\John\\\\Desktop\\\\Web Dev\\\\watch-list\\\\client\\\\src\\\\components\\\\Register.js\";\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport watchListLogo from \"../img/watchlist-logo.svg\";\nimport AuthError from './AuthError';\nimport '../css/register.scss';\n\nconst Register = () => {\n  const _useState = useState({\n    username: '',\n    password: '',\n    confirmPassword: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        registerFields = _useState2[0],\n        setRegisterFields = _useState2[1];\n\n  const _useState3 = useState({\n    username: [],\n    password: [],\n    confirmPassword: []\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        registerFieldErrors = _useState4[0],\n        setRegisterFieldErrors = _useState4[1];\n\n  const _useState5 = useState({\n    username: false,\n    password: false,\n    confirmPassword: false\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        registerFieldHighlight = _useState6[0],\n        setRegisterFieldHighlight = _useState6[1];\n\n  const checkInputValues = (fieldName, fieldValue) => {\n    switch (fieldName) {\n      case 'username':\n        {\n          const inputErrors = [];\n\n          if (fieldValue.includes(' ')) {\n            inputErrors.push('Username cannot contain any spaces');\n          }\n\n          if (fieldValue.length < 1) {\n            inputErrors.push('Username is required');\n          }\n\n          setRegisterFieldErrors(_objectSpread({}, registerFieldErrors, {\n            username: inputErrors\n          }));\n\n          if (inputErrors.length > 0) {\n            setRegisterFieldHighlight(_objectSpread({}, registerFieldHighlight, {\n              username: true\n            }));\n          } else {\n            setRegisterFieldHighlight(_objectSpread({}, registerFieldHighlight, {\n              username: false\n            }));\n          }\n\n          break;\n        }\n\n      case 'password':\n        {\n          const inputErrors = [];\n\n          if (fieldValue.includes(' ')) {\n            inputErrors.push('Password cannot contain any spaces');\n          }\n\n          if (fieldValue.length < 1) {\n            inputErrors.push('Password is required');\n          }\n\n          if (fieldValue.length < 6) {\n            inputErrors.push('Password needs to have a minimum of 6 characters');\n          }\n\n          if (fieldValue !== registerFields.confirmPassword && registerFields.confirmPassword.length > 1) {\n            setRegisterFieldErrors(_objectSpread({}, registerFieldErrors, {\n              password: inputErrors,\n              confirmPassword: ['Passwords do not match']\n            }));\n          } else setRegisterFieldErrors(_objectSpread({}, registerFieldErrors, {\n            password: inputErrors,\n            confirmPassword: []\n          }));\n\n          if (inputErrors.length > 0) {\n            setRegisterFieldHighlight(_objectSpread({}, registerFieldHighlight, {\n              password: true\n            }));\n          } else {\n            setRegisterFieldHighlight(_objectSpread({}, registerFieldHighlight, {\n              password: false\n            }));\n          }\n\n          break;\n        }\n\n      case 'confirmPassword':\n        {\n          const inputErrors = [];\n\n          if (fieldValue !== registerFields.password) {\n            inputErrors.push('Passwords do not match');\n          }\n\n          setRegisterFieldErrors(_objectSpread({}, registerFieldErrors, {\n            confirmPassword: inputErrors\n          }));\n\n          if (inputErrors.length > 0) {\n            setRegisterFieldHighlight(_objectSpread({}, registerFieldHighlight, {\n              confirmpassword: true\n            }));\n          } else {\n            setRegisterFieldHighlight(_objectSpread({}, registerFieldHighlight, {\n              password: false\n            }));\n          }\n\n          break;\n        }\n    }\n  };\n\n  const handleFormFields = event => {\n    const fieldName = event.target.name;\n    const fieldValue = event.target.value;\n\n    switch (fieldName) {\n      case 'username':\n        setRegisterFields(_objectSpread({}, registerFields, {\n          username: fieldValue\n        }));\n        checkInputValues(fieldName, fieldValue);\n        break;\n\n      case 'password':\n        setRegisterFields(_objectSpread({}, registerFields, {\n          password: fieldValue\n        }));\n        checkInputValues(fieldName, fieldValue);\n        break;\n\n      case 'confirmPassword':\n        setRegisterFields(_objectSpread({}, registerFields, {\n          confirmPassword: fieldValue\n        }));\n        checkInputValues(fieldName, fieldValue);\n        break;\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"register-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"register-header__logo\",\n    src: watchListLogo,\n    alt: \"Smiling TV\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    className: \"register-header__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, \"Watch List\")), React.createElement(\"form\", {\n    className: \"register-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"register-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"label-text\",\n    style: registerFieldHighlight.username ? {\n      color: 'red'\n    } : {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"Username\"), React.createElement(\"input\", {\n    className: \"register-form__username\",\n    type: \"text\",\n    name: \"username\",\n    value: registerFields.username,\n    onChange: handleFormFields,\n    style: registerFieldHighlight.username ? {\n      border: '2px solid red'\n    } : {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }), React.createElement(AuthError, {\n    fieldErrors: registerFieldErrors.username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    className: \"register-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"label-text\",\n    style: registerFieldHighlight.password ? {\n      color: 'red'\n    } : {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    className: \"register-form__password\",\n    type: \"password\",\n    name: \"password\",\n    value: registerFields.password,\n    onChange: handleFormFields,\n    style: registerFieldHighlight.password ? {\n      border: '2px solid red'\n    } : {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    className: \"register-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"label-text\",\n    style: registerFieldHighlight.password ? {\n      color: 'red'\n    } : {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, \"Confirm Password\"), React.createElement(\"input\", {\n    className: \"register-form__confirm-password\",\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: registerFields.confirmPassword,\n    onChange: handleFormFields,\n    style: registerFieldHighlight.password ? {\n      border: '2px solid red'\n    } : {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"register-password-errors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, React.createElement(AuthError, {\n    fieldErrors: registerFieldErrors.password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }), React.createElement(AuthError, {\n    fieldErrors: registerFieldErrors.confirmPassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }))), React.createElement(\"input\", {\n    className: \"register-form__submit\",\n    type: \"submit\",\n    value: \"Register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"register-links\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"register-signin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"register-signin__message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, \"Already Have An Account?\"), React.createElement(Link, {\n    to: \"/login\",\n    className: \"register-signin__link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, \"Sign In\")), React.createElement(Link, {\n    to: \"/\",\n    className: \"register-links__guest\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, \"Guest\")));\n};\n\nexport default Register;","map":{"version":3,"sources":["C:\\Users\\John\\Desktop\\Web Dev\\watch-list\\client\\src\\components\\Register.js"],"names":["React","useState","Link","AuthError","Register","username","password","confirmPassword","registerFields","setRegisterFields","registerFieldErrors","setRegisterFieldErrors","registerFieldHighlight","setRegisterFieldHighlight","checkInputValues","fieldName","fieldValue","inputErrors","includes","push","length","confirmpassword","handleFormFields","event","target","name","value","watchListLogo","color","border"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,sBAAP;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA,oBACuBH,QAAQ,CAAC;AACnDI,IAAAA,QAAQ,EAAE,EADyC;AAEnDC,IAAAA,QAAQ,EAAE,EAFyC;AAGnDC,IAAAA,eAAe,EAAE;AAHkC,GAAD,CAD/B;AAAA;AAAA,QACdC,cADc;AAAA,QACEC,iBADF;;AAAA,qBAOiCR,QAAQ,CAAC;AAC7DI,IAAAA,QAAQ,EAAE,EADmD;AAE7DC,IAAAA,QAAQ,EAAE,EAFmD;AAG7DC,IAAAA,eAAe,EAAE;AAH4C,GAAD,CAPzC;AAAA;AAAA,QAOdG,mBAPc;AAAA,QAOOC,sBAPP;;AAAA,qBAauCV,QAAQ,CAAC;AACnEI,IAAAA,QAAQ,EAAE,KADyD;AAEnEC,IAAAA,QAAQ,EAAE,KAFyD;AAGnEC,IAAAA,eAAe,EAAC;AAHmD,GAAD,CAb/C;AAAA;AAAA,QAadK,sBAbc;AAAA,QAaUC,yBAbV;;AAmBrB,QAAMC,gBAAgB,GAAG,CAACC,SAAD,EAAYC,UAAZ,KAA2B;AAClD,YAAQD,SAAR;AACE,WAAK,UAAL;AAAiB;AACf,gBAAME,WAAW,GAAG,EAApB;;AACA,cAAID,UAAU,CAACE,QAAX,CAAoB,GAApB,CAAJ,EAA8B;AAC5BD,YAAAA,WAAW,CAACE,IAAZ,CAAiB,oCAAjB;AACD;;AAED,cAAIH,UAAU,CAACI,MAAX,GAAoB,CAAxB,EAA2B;AACzBH,YAAAA,WAAW,CAACE,IAAZ,CAAiB,sBAAjB;AACD;;AACDR,UAAAA,sBAAsB,mBACjBD,mBADiB;AAEpBL,YAAAA,QAAQ,EAAEY;AAFU,aAAtB;;AAKA,cAAIA,WAAW,CAACG,MAAZ,GAAqB,CAAzB,EAA4B;AAC1BP,YAAAA,yBAAyB,mBACpBD,sBADoB;AAEvBP,cAAAA,QAAQ,EAAE;AAFa,eAAzB;AAID,WALD,MAKO;AACLQ,YAAAA,yBAAyB,mBACpBD,sBADoB;AAEvBP,cAAAA,QAAQ,EAAE;AAFa,eAAzB;AAID;;AAED;AACD;;AAED,WAAK,UAAL;AAAiB;AACf,gBAAMY,WAAW,GAAG,EAApB;;AAEA,cAAID,UAAU,CAACE,QAAX,CAAoB,GAApB,CAAJ,EAA8B;AAC5BD,YAAAA,WAAW,CAACE,IAAZ,CAAiB,oCAAjB;AACD;;AAED,cAAIH,UAAU,CAACI,MAAX,GAAoB,CAAxB,EAA2B;AACzBH,YAAAA,WAAW,CAACE,IAAZ,CAAiB,sBAAjB;AACD;;AAED,cAAIH,UAAU,CAACI,MAAX,GAAoB,CAAxB,EAA2B;AACzBH,YAAAA,WAAW,CAACE,IAAZ,CAAiB,kDAAjB;AACD;;AAED,cACEH,UAAU,KAAKR,cAAc,CAACD,eAA9B,IACAC,cAAc,CAACD,eAAf,CAA+Ba,MAA/B,GAAwC,CAF1C,EAGE;AACAT,YAAAA,sBAAsB,mBACjBD,mBADiB;AAEpBJ,cAAAA,QAAQ,EAAEW,WAFU;AAGpBV,cAAAA,eAAe,EAAE,CAAC,wBAAD;AAHG,eAAtB;AAKD,WATD,MAUEI,sBAAsB,mBACjBD,mBADiB;AAEpBJ,YAAAA,QAAQ,EAAEW,WAFU;AAGpBV,YAAAA,eAAe,EAAE;AAHG,aAAtB;;AAMF,cAAIU,WAAW,CAACG,MAAZ,GAAqB,CAAzB,EAA4B;AAC1BP,YAAAA,yBAAyB,mBACpBD,sBADoB;AAEvBN,cAAAA,QAAQ,EAAE;AAFa,eAAzB;AAID,WALD,MAKO;AACLO,YAAAA,yBAAyB,mBACpBD,sBADoB;AAEvBN,cAAAA,QAAQ,EAAE;AAFa,eAAzB;AAID;;AAED;AACD;;AAED,WAAK,iBAAL;AAAwB;AACtB,gBAAMW,WAAW,GAAG,EAApB;;AAEA,cAAID,UAAU,KAAKR,cAAc,CAACF,QAAlC,EAA4C;AAC1CW,YAAAA,WAAW,CAACE,IAAZ,CAAiB,wBAAjB;AACD;;AACDR,UAAAA,sBAAsB,mBACjBD,mBADiB;AAEpBH,YAAAA,eAAe,EAAEU;AAFG,aAAtB;;AAKA,cAAIA,WAAW,CAACG,MAAZ,GAAqB,CAAzB,EAA4B;AAC1BP,YAAAA,yBAAyB,mBACpBD,sBADoB;AAEvBS,cAAAA,eAAe,EAAE;AAFM,eAAzB;AAID,WALD,MAKO;AACLR,YAAAA,yBAAyB,mBACpBD,sBADoB;AAEvBN,cAAAA,QAAQ,EAAE;AAFa,eAAzB;AAID;;AAED;AACD;AApGH;AAsGD,GAvGD;;AAyGA,QAAMgB,gBAAgB,GAAGC,KAAK,IAAI;AAChC,UAAMR,SAAS,GAAGQ,KAAK,CAACC,MAAN,CAAaC,IAA/B;AACA,UAAMT,UAAU,GAAGO,KAAK,CAACC,MAAN,CAAaE,KAAhC;;AACA,YAAQX,SAAR;AACE,WAAK,UAAL;AACEN,QAAAA,iBAAiB,mBAAMD,cAAN;AAAsBH,UAAAA,QAAQ,EAAEW;AAAhC,WAAjB;AACAF,QAAAA,gBAAgB,CAACC,SAAD,EAAYC,UAAZ,CAAhB;AACA;;AAEF,WAAK,UAAL;AACEP,QAAAA,iBAAiB,mBAAMD,cAAN;AAAsBF,UAAAA,QAAQ,EAAEU;AAAhC,WAAjB;AACAF,QAAAA,gBAAgB,CAACC,SAAD,EAAYC,UAAZ,CAAhB;AACA;;AAEF,WAAK,iBAAL;AACEP,QAAAA,iBAAiB,mBAAMD,cAAN;AAAsBD,UAAAA,eAAe,EAAES;AAAvC,WAAjB;AACAF,QAAAA,gBAAgB,CAACC,SAAD,EAAYC,UAAZ,CAAhB;AACA;AAdJ;AAgBD,GAnBD;;AAqBA,SACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,uBADZ;AAEE,IAAA,GAAG,EAAEW,aAFP;AAGE,IAAA,GAAG,EAAC,YAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME;AAAI,IAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,CADF,EAUE;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,SAAS,EAAC,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,YADZ;AAEE,IAAA,KAAK,EAAEf,sBAAsB,CAACP,QAAvB,GAAkC;AAAEuB,MAAAA,KAAK,EAAE;AAAT,KAAlC,GAAqD,EAF9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAOE;AACE,IAAA,SAAS,EAAC,yBADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,KAAK,EAAEpB,cAAc,CAACH,QAJxB;AAKE,IAAA,QAAQ,EAAEiB,gBALZ;AAME,IAAA,KAAK,EACHV,sBAAsB,CAACP,QAAvB,GAAkC;AAAEwB,MAAAA,MAAM,EAAE;AAAV,KAAlC,GAAgE,EAPpE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAiBE,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAEnB,mBAAmB,CAACL,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,CADF,EAoBE;AAAO,IAAA,SAAS,EAAC,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,YADZ;AAEE,IAAA,KAAK,EAAEO,sBAAsB,CAACN,QAAvB,GAAkC;AAAEsB,MAAAA,KAAK,EAAE;AAAT,KAAlC,GAAqD,EAF9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAOE;AACE,IAAA,SAAS,EAAC,yBADZ;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,KAAK,EAAEpB,cAAc,CAACF,QAJxB;AAKE,IAAA,QAAQ,EAAEgB,gBALZ;AAME,IAAA,KAAK,EACHV,sBAAsB,CAACN,QAAvB,GAAkC;AAAEuB,MAAAA,MAAM,EAAE;AAAV,KAAlC,GAAgE,EAPpE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CApBF,EAsCE;AACE,IAAA,SAAS,EAAC,qBADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE;AACE,IAAA,SAAS,EAAC,YADZ;AAEE,IAAA,KAAK,EAAEjB,sBAAsB,CAACN,QAAvB,GAAkC;AAAEsB,MAAAA,KAAK,EAAE;AAAT,KAAlC,GAAqD,EAF9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,EASE;AACE,IAAA,SAAS,EAAC,iCADZ;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,IAAI,EAAC,iBAHP;AAIE,IAAA,KAAK,EAAEpB,cAAc,CAACD,eAJxB;AAKE,IAAA,QAAQ,EAAEe,gBALZ;AAME,IAAA,KAAK,EACHV,sBAAsB,CAACN,QAAvB,GAAkC;AAAEuB,MAAAA,MAAM,EAAE;AAAV,KAAlC,GAAgE,EAPpE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAmBE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAEnB,mBAAmB,CAACJ,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAEI,mBAAmB,CAACH,eAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAnBF,CAtCF,EA8DE;AACE,IAAA,SAAS,EAAC,uBADZ;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,KAAK,EAAC,UAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9DF,CAVF,EA+EE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,0BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAEE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,QAAT;AAAkB,IAAA,SAAS,EAAC,uBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,CADF,EAOE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAa,IAAA,SAAS,EAAC,uBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAPF,CA/EF,CADF;AA6FD,CA9OD;;AAgPA,eAAeH,QAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport watchListLogo from '../img/watchlist-logo.svg';\r\nimport AuthError from './AuthError';\r\nimport '../css/register.scss';\r\n\r\nconst Register = () => {\r\n  const [registerFields, setRegisterFields] = useState({\r\n    username: '',\r\n    password: '',\r\n    confirmPassword: ''\r\n  });\r\n\r\n  const [registerFieldErrors, setRegisterFieldErrors] = useState({\r\n    username: [],\r\n    password: [],\r\n    confirmPassword: []\r\n  });\r\n\r\n  const [registerFieldHighlight, setRegisterFieldHighlight] = useState({\r\n    username: false,\r\n    password: false,\r\n    confirmPassword:false\r\n  });\r\n\r\n  const checkInputValues = (fieldName, fieldValue) => {\r\n    switch (fieldName) {\r\n      case 'username': {\r\n        const inputErrors = [];\r\n        if (fieldValue.includes(' ')) {\r\n          inputErrors.push('Username cannot contain any spaces');\r\n        }\r\n\r\n        if (fieldValue.length < 1) {\r\n          inputErrors.push('Username is required');\r\n        }\r\n        setRegisterFieldErrors({\r\n          ...registerFieldErrors,\r\n          username: inputErrors\r\n        });\r\n\r\n        if (inputErrors.length > 0) {\r\n          setRegisterFieldHighlight({\r\n            ...registerFieldHighlight,\r\n            username: true\r\n          });\r\n        } else {\r\n          setRegisterFieldHighlight({\r\n            ...registerFieldHighlight,\r\n            username: false\r\n          });\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n      case 'password': {\r\n        const inputErrors = [];\r\n\r\n        if (fieldValue.includes(' ')) {\r\n          inputErrors.push('Password cannot contain any spaces');\r\n        }\r\n\r\n        if (fieldValue.length < 1) {\r\n          inputErrors.push('Password is required');\r\n        }\r\n\r\n        if (fieldValue.length < 6) {\r\n          inputErrors.push('Password needs to have a minimum of 6 characters');\r\n        }\r\n\r\n        if (\r\n          fieldValue !== registerFields.confirmPassword &&\r\n          registerFields.confirmPassword.length > 1\r\n        ) {\r\n          setRegisterFieldErrors({\r\n            ...registerFieldErrors,\r\n            password: inputErrors,\r\n            confirmPassword: ['Passwords do not match']\r\n          });\r\n        } else\r\n          setRegisterFieldErrors({\r\n            ...registerFieldErrors,\r\n            password: inputErrors,\r\n            confirmPassword: []\r\n          });\r\n\r\n        if (inputErrors.length > 0) {\r\n          setRegisterFieldHighlight({\r\n            ...registerFieldHighlight,\r\n            password: true\r\n          });\r\n        } else {\r\n          setRegisterFieldHighlight({\r\n            ...registerFieldHighlight,\r\n            password: false\r\n          });\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n      case 'confirmPassword': {\r\n        const inputErrors = [];\r\n\r\n        if (fieldValue !== registerFields.password) {\r\n          inputErrors.push('Passwords do not match');\r\n        }\r\n        setRegisterFieldErrors({\r\n          ...registerFieldErrors,\r\n          confirmPassword: inputErrors\r\n        });\r\n\r\n        if (inputErrors.length > 0) {\r\n          setRegisterFieldHighlight({\r\n            ...registerFieldHighlight,\r\n            confirmpassword: true\r\n          });\r\n        } else {\r\n          setRegisterFieldHighlight({\r\n            ...registerFieldHighlight,\r\n            password: false\r\n          });\r\n        }\r\n\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleFormFields = event => {\r\n    const fieldName = event.target.name;\r\n    const fieldValue = event.target.value;\r\n    switch (fieldName) {\r\n      case 'username':\r\n        setRegisterFields({ ...registerFields, username: fieldValue });\r\n        checkInputValues(fieldName, fieldValue);\r\n        break;\r\n\r\n      case 'password':\r\n        setRegisterFields({ ...registerFields, password: fieldValue });\r\n        checkInputValues(fieldName, fieldValue);\r\n        break;\r\n\r\n      case 'confirmPassword':\r\n        setRegisterFields({ ...registerFields, confirmPassword: fieldValue });\r\n        checkInputValues(fieldName, fieldValue);\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"register\">\r\n      <div className=\"register-header\">\r\n        <img\r\n          className=\"register-header__logo\"\r\n          src={watchListLogo}\r\n          alt=\"Smiling TV\"\r\n        />\r\n        <h1 className=\"register-header__title\">Watch List</h1>\r\n      </div>\r\n\r\n      <form className=\"register-form\">\r\n        <label className=\"register-form-label\">\r\n          <span\r\n            className=\"label-text\"\r\n            style={registerFieldHighlight.username ? { color: 'red' } : {}}\r\n          >\r\n            Username\r\n          </span>\r\n          <input\r\n            className=\"register-form__username\"\r\n            type=\"text\"\r\n            name=\"username\"\r\n            value={registerFields.username}\r\n            onChange={handleFormFields}\r\n            style={\r\n              registerFieldHighlight.username ? { border: '2px solid red' } : {}\r\n            }\r\n          />\r\n          <AuthError fieldErrors={registerFieldErrors.username} />\r\n        </label>\r\n        <label className=\"register-form-label\">\r\n          <span\r\n            className=\"label-text\"\r\n            style={registerFieldHighlight.password ? { color: 'red' } : {}}\r\n          >\r\n            Password\r\n          </span>\r\n          <input\r\n            className=\"register-form__password\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={registerFields.password}\r\n            onChange={handleFormFields}\r\n            style={\r\n              registerFieldHighlight.password ? { border: '2px solid red' } : {}\r\n            }\r\n          />\r\n        </label>\r\n        <label\r\n          className=\"register-form-label\"\r\n        >\r\n          <span\r\n            className=\"label-text\"\r\n            style={registerFieldHighlight.password ? { color: 'red' } : {}}\r\n          >\r\n            Confirm Password\r\n          </span>\r\n          <input\r\n            className=\"register-form__confirm-password\"\r\n            type=\"password\"\r\n            name=\"confirmPassword\"\r\n            value={registerFields.confirmPassword}\r\n            onChange={handleFormFields}\r\n            style={\r\n              registerFieldHighlight.password ? { border: '2px solid red' } : {}\r\n            }\r\n          />\r\n          <div className=\"register-password-errors\">\r\n            <AuthError fieldErrors={registerFieldErrors.password} />\r\n            <AuthError fieldErrors={registerFieldErrors.confirmPassword} />\r\n          </div>\r\n        </label>\r\n        <input\r\n          className=\"register-form__submit\"\r\n          type=\"submit\"\r\n          value=\"Register\"\r\n        />\r\n      </form>\r\n\r\n      <div className=\"register-links\">\r\n        <div className=\"register-signin\">\r\n          <p className=\"register-signin__message\">Already Have An Account?</p>\r\n          <Link to=\"/login\" className=\"register-signin__link\">\r\n            Sign In\r\n          </Link>\r\n        </div>\r\n        <Link to=\"/\" className=\"register-links__guest\">\r\n          Guest\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}