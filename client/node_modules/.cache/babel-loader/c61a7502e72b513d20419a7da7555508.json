{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\John\\\\Desktop\\\\Web Dev\\\\watch-list\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\John\\\\Desktop\\\\Web Dev\\\\watch-list\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\John\\\\Desktop\\\\Web Dev\\\\watch-list\\\\client\\\\src\\\\components\\\\Register.js\";\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport watchListLogo from \"../img/watchlist-logo.svg\";\nimport AuthError from './AuthError';\nimport '../css/register.scss';\n\nconst Register = () => {\n  const _useState = useState({\n    username: '',\n    password: '',\n    confirmPassword: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        registerFields = _useState2[0],\n        setRegisterFields = _useState2[1];\n\n  const _useState3 = useState({\n    username: [],\n    password: [],\n    confirmPassword: []\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        registerErrors = _useState4[0],\n        setRegisterErrors = _useState4[1];\n\n  const checkForInputErrors = event => {\n    const field = event.target;\n    setRegisterErrors({\n      username: [],\n      password: [],\n      confirmPassword: []\n    });\n\n    switch (field.name) {\n      case 'username':\n        {\n          const errors = [];\n\n          if (registerFields.username.length < 1) {\n            errors.push('Username is required');\n          }\n\n          if (registerFields.username.includes(' ')) {\n            errors.push('Username cannot contain any spaces');\n          }\n\n          setRegisterErrors(_objectSpread({}, registerErrors, {\n            username: errors\n          }));\n          break;\n        }\n\n      case 'password':\n        {\n          const errors = [];\n\n          if (registerFields.password.length < 1) {\n            errors.push('Password is required');\n          }\n\n          if (registerFields.password.includes(' ')) {\n            errors.push('Password cannot contain any spaces');\n          }\n\n          if (registerFields.password.length < 6) {\n            error.push('Password needs to be at least ');\n          }\n\n          setRegisterErrors(_objectSpread({}, registerErrors, {\n            password: errors\n          }));\n          break;\n        }\n\n      case 'confirmPassword':\n        {\n          const errors = [];\n\n          if (registerFields.password !== registerFields.confirmPassword) {\n            errors.push('Passwords do not match');\n          }\n\n          setRegisterErrors(_objectSpread({}, registerErrors, {\n            confirmPassword: errors\n          }));\n        }\n    }\n  };\n\n  const handleFormFields = event => {\n    const fieldName = event.target.name;\n    const fieldValue = event.target.value;\n\n    switch (fieldName) {\n      case 'username':\n        setRegisterFields(_objectSpread({}, registerFields, {\n          username: fieldValue\n        }));\n        break;\n\n      case 'password':\n        setRegisterFields(_objectSpread({}, registerFields, {\n          password: fieldValue\n        }));\n        break;\n\n      case 'confirmPassword':\n        setRegisterFields(_objectSpread({}, registerFields, {\n          confirmPassword: fieldValue\n        }));\n        break;\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"register-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"register-header__logo\",\n    src: watchListLogo,\n    alt: \"Smiling TV\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    className: \"register-header__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Watch List\")), React.createElement(\"form\", {\n    className: \"register-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(AuthError, {\n    registerErrors: registerErrors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    className: \"register-form__username\",\n    type: \"text\",\n    placeholder: \"Username\",\n    name: \"username\",\n    value: registerFields.username,\n    onChange: handleFormFields,\n    onBlur: checkForInputErrors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    className: \"register-form__password\",\n    type: \"password\",\n    placeholder: \"Password\",\n    name: \"password\",\n    value: registerFields.password,\n    onChange: handleFormFields,\n    onBlur: checkForInputErrors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    className: \"register-form__confirm-password\",\n    type: \"password\",\n    placeholder: \"Confirm Password\",\n    name: \"confirmPassword\",\n    value: registerFields.confirmPassword,\n    onChange: handleFormFields,\n    onBlur: checkForInputErrors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    className: \"register-form__submit\",\n    type: \"submit\",\n    value: \"Register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"register-links\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"register-signin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"register-signin__message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"Already Have An Account?\"), React.createElement(Link, {\n    to: \"/login\",\n    className: \"register-signin__link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"Sign In\")), React.createElement(Link, {\n    to: \"/\",\n    className: \"register-links__guest\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \"Guest\")));\n};\n\nexport default Register;","map":{"version":3,"sources":["C:\\Users\\John\\Desktop\\Web Dev\\watch-list\\client\\src\\components\\Register.js"],"names":["React","useState","Link","AuthError","Register","username","password","confirmPassword","registerFields","setRegisterFields","registerErrors","setRegisterErrors","checkForInputErrors","event","field","target","name","errors","length","push","includes","error","handleFormFields","fieldName","fieldValue","value","watchListLogo"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport watchListLogo from '../img/watchlist-logo.svg';\r\nimport AuthError from './AuthError';\r\nimport '../css/register.scss';\r\n\r\nconst Register = () => {\r\n  const [registerFields, setRegisterFields] = useState({\r\n    username: '',\r\n    password: '',\r\n    confirmPassword: ''\r\n  });\r\n\r\n  const [registerErrors, setRegisterErrors] = useState({\r\n    username: [],\r\n    password: [],\r\n    confirmPassword: []\r\n  });\r\n\r\n  const checkForInputErrors = event => {\r\n    const field = event.target;\r\n\r\n    setRegisterErrors({\r\n      username: [],\r\n      password: [],\r\n      confirmPassword: []\r\n    });\r\n\r\n    switch (field.name) {\r\n      case 'username': {\r\n        const errors = [];\r\n        if (registerFields.username.length < 1) {\r\n          errors.push('Username is required');\r\n        }\r\n\r\n        if (registerFields.username.includes(' ')) {\r\n          errors.push('Username cannot contain any spaces');\r\n        }\r\n\r\n        setRegisterErrors({\r\n          ...registerErrors,\r\n          username: errors\r\n        });\r\n        break;\r\n      }\r\n      case 'password': {\r\n        const errors = [];\r\n        if (registerFields.password.length < 1) {\r\n          errors.push('Password is required');\r\n        }\r\n\r\n        if (registerFields.password.includes(' ')) {\r\n          errors.push('Password cannot contain any spaces');\r\n        }\r\n\r\n        if(registerFields.password.length < 6){\r\n          error.push('Password needs to be at least ')\r\n        }\r\n\r\n        setRegisterErrors({\r\n          ...registerErrors,\r\n          password: errors\r\n        });\r\n        break;\r\n      }\r\n\r\n      case 'confirmPassword': {\r\n        const errors = [];\r\n        if (registerFields.password !== registerFields.confirmPassword) {\r\n          errors.push('Passwords do not match');\r\n        }\r\n        setRegisterErrors({\r\n          ...registerErrors,\r\n          confirmPassword: errors\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleFormFields = event => {\r\n    const fieldName = event.target.name;\r\n    const fieldValue = event.target.value;\r\n    switch (fieldName) {\r\n      case 'username':\r\n        setRegisterFields({ ...registerFields, username: fieldValue });\r\n        break;\r\n\r\n      case 'password':\r\n        setRegisterFields({ ...registerFields, password: fieldValue });\r\n        break;\r\n\r\n      case 'confirmPassword':\r\n        setRegisterFields({ ...registerFields, confirmPassword: fieldValue });\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"register\">\r\n      <div className=\"register-header\">\r\n        <img\r\n          className=\"register-header__logo\"\r\n          src={watchListLogo}\r\n          alt=\"Smiling TV\"\r\n        />\r\n        <h1 className=\"register-header__title\">Watch List</h1>\r\n      </div>\r\n\r\n      <form className=\"register-form\">\r\n        <AuthError registerErrors={registerErrors} />\r\n        <input\r\n          className=\"register-form__username\"\r\n          type=\"text\"\r\n          placeholder=\"Username\"\r\n          name=\"username\"\r\n          value={registerFields.username}\r\n          onChange={handleFormFields}\r\n          onBlur={checkForInputErrors}\r\n        />\r\n        <input\r\n          className=\"register-form__password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          name=\"password\"\r\n          value={registerFields.password}\r\n          onChange={handleFormFields}\r\n          onBlur={checkForInputErrors}\r\n        />\r\n\r\n        <input\r\n          className=\"register-form__confirm-password\"\r\n          type=\"password\"\r\n          placeholder=\"Confirm Password\"\r\n          name=\"confirmPassword\"\r\n          value={registerFields.confirmPassword}\r\n          onChange={handleFormFields}\r\n          onBlur={checkForInputErrors}\r\n        />\r\n        <input\r\n          className=\"register-form__submit\"\r\n          type=\"submit\"\r\n          value=\"Register\"\r\n        />\r\n      </form>\r\n\r\n      <div className=\"register-links\">\r\n        <div className=\"register-signin\">\r\n          <p className=\"register-signin__message\">Already Have An Account?</p>\r\n          <Link to=\"/login\" className=\"register-signin__link\">\r\n            Sign In\r\n          </Link>\r\n        </div>\r\n        <Link to=\"/\" className=\"register-links__guest\">\r\n          Guest\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}